//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: .NET 9.0.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace

using System;
using Blowdart.UI;
using Microsoft.AspNetCore.Components.Web;

public static partial class WebElements
{
    #region Element-Bound Events

    #region Keyboard

    public static bool KeyDown(this ElementRef e, Func<KeyboardEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Keyboard.OnKeyDown, out _, predicate);
    public static bool KeyPress(this ElementRef e, Func<KeyboardEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Keyboard.OnKeyPress, out _, predicate);
    public static bool KeyUp(this ElementRef e, Func<KeyboardEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Keyboard.OnKeyUp, out _, predicate);

    #endregion

    #region Mouse

    public static bool Click(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnClick, out _, predicate);
    public static bool DoubleClick(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnDoubleClick, out _, predicate);
    public static bool MouseDown(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnMouseDown, out _, predicate);
    public static bool MouseMove(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnMouseMove, out _, predicate);
    public static bool MouseOut(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnMouseOut, out _, predicate);
    public static bool MouseOver(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnMouseOver, out _, predicate);
    public static bool MouseUp(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnMouseUp, out _, predicate);
    public static bool Wheel(this ElementRef e, Func<MouseEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Mouse.OnWheel, out _, predicate);

    #endregion

    #region Clipboard

    public static bool Copy(this ElementRef e, Func<ClipboardEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Clipboard.OnCopy, out _, predicate);
    public static bool Cut(this ElementRef e, Func<ClipboardEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Clipboard.OnCut, out _, predicate);
    public static bool Paste(this ElementRef e, Func<ClipboardEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Clipboard.OnPaste, out _, predicate);

    #endregion

    #region Drag

    public static bool Drag(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnDrag, out _, predicate);
    public static bool DragEnd(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnDragEnd, out _, predicate);
    public static bool DragEnter(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnDragEnter, out _, predicate);
    public static bool DragLeave(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnDragLeave, out _, predicate);
    public static bool DragOver(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnDragOver, out _, predicate);
    public static bool DragStart(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnDragStart, out _, predicate);
    public static bool Drop(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnDrop, out _, predicate);
    public static bool Scroll(this ElementRef e, Func<DragEventArgs, bool>? predicate = null) => e.OnEvent(HtmlEvents.Drag.OnScroll, out _, predicate);

    #endregion

    #endregion
}

