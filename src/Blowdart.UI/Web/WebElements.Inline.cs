//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: .NET Core 3.1.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable InconsistentNaming
// ReSharper disable CheckNamespace

using Blowdart.UI;

public static partial class WebElements
{
    #region Inline Directives

    public static ElementRef a(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.A, inner, id);
    public static ElementRef abbr(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Abbr, inner, id);
    public static ElementRef address(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Address, inner, id);
    public static ElementRef area(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Area, inner, id);
    public static ElementRef article(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Article, inner, id);
    public static ElementRef aside(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Aside, inner, id);
    public static ElementRef audio(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Audio, inner, id);
    public static ElementRef b(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.B, inner, id);
    public static ElementRef @base(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Base, inner, id);
    public static ElementRef bdi(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Bdi, inner, id);
    public static ElementRef bdo(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Bdo, inner, id);
    public static ElementRef blockquote(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Blockquote, inner, id);
    public static ElementRef body(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Body, inner, id);
    public static ElementRef br(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Br, inner, id);
    public static ElementRef button(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Button, inner, id);
    public static ElementRef canvas(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Canvas, inner, id);
    public static ElementRef cite(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Cite, inner, id);
    public static ElementRef code(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Code, inner, id);
    public static ElementRef col(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Col, inner, id);
    public static ElementRef colgroup(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Colgroup, inner, id);
    public static ElementRef data(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Data, inner, id);
    public static ElementRef datalist(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Datalist, inner, id);
    public static ElementRef dd(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Dd, inner, id);
    public static ElementRef del(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Del, inner, id);
    public static ElementRef details(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Details, inner, id);
    public static ElementRef dfn(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Dfn, inner, id);
    public static ElementRef dialog(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Dialog, inner, id);
    public static ElementRef div(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Div, inner, id);
    public static ElementRef dl(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Dl, inner, id);
    public static ElementRef dt(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Dt, inner, id);
    public static ElementRef em(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Em, inner, id);
    public static ElementRef embed(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Embed, inner, id);
    public static ElementRef fieldset(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Fieldset, inner, id);
    public static ElementRef figcaption(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Figcaption, inner, id);
    public static ElementRef figure(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Figure, inner, id);
    public static ElementRef footer(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Footer, inner, id);
    public static ElementRef form(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Form, inner, id);
    public static ElementRef h1(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.H1, inner, id);
    public static ElementRef h2(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.H2, inner, id);
    public static ElementRef h3(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.H3, inner, id);
    public static ElementRef h4(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.H4, inner, id);
    public static ElementRef h5(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.H5, inner, id);
    public static ElementRef h6(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.H6, inner, id);
    public static ElementRef head(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Head, inner, id);
    public static ElementRef header(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Header, inner, id);
    public static ElementRef hr(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Hr, inner, id);
    public static ElementRef html(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Html, inner, id);
    public static ElementRef i(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.I, inner, id);
    public static ElementRef iframe(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Iframe, inner, id);
    public static ElementRef img(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Img, inner, id);
    public static ElementRef input(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Input, inner, id);
    public static ElementRef ins(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Ins, inner, id);
    public static ElementRef kbd(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Kbd, inner, id);
    public static ElementRef label(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Label, inner, id);
    public static ElementRef legend(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Legend, inner, id);
    public static ElementRef li(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Li, inner, id);
    public static ElementRef link(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Link, inner, id);
    public static ElementRef main(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Main, inner, id);
    public static ElementRef map(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Map, inner, id);
    public static ElementRef mark(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Mark, inner, id);
    public static ElementRef meta(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Meta, inner, id);
    public static ElementRef meter(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Meter, inner, id);
    public static ElementRef nav(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Nav, inner, id);
    public static ElementRef noscript(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Noscript, inner, id);
    public static ElementRef @object(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Object, inner, id);
    public static ElementRef ol(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Ol, inner, id);
    public static ElementRef optgroup(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Optgroup, inner, id);
    public static ElementRef option(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Option, inner, id);
    public static ElementRef output(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Output, inner, id);
    public static ElementRef p(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.P, inner, id);
    public static ElementRef param(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Param, inner, id);
    public static ElementRef picture(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Picture, inner, id);
    public static ElementRef pre(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Pre, inner, id);
    public static ElementRef progress(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Progress, inner, id);
    public static ElementRef q(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Q, inner, id);
    public static ElementRef rp(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Rp, inner, id);
    public static ElementRef rt(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Rt, inner, id);
    public static ElementRef ruby(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Ruby, inner, id);
    public static ElementRef s(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.S, inner, id);
    public static ElementRef samp(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Samp, inner, id);
    public static ElementRef script(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Script, inner, id);
    public static ElementRef section(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Section, inner, id);
    public static ElementRef select(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Select, inner, id);
    public static ElementRef small(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Small, inner, id);
    public static ElementRef source(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Source, inner, id);
    public static ElementRef span(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Span, inner, id);
    public static ElementRef strong(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Strong, inner, id);
    public static ElementRef style(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Style, inner, id);
    public static ElementRef sub(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Sub, inner, id);
    public static ElementRef summary(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Summary, inner, id);
    public static ElementRef sup(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Sup, inner, id);
    public static ElementRef svg(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Svg, inner, id);
    public static ElementRef table(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Table, inner, id);
    public static ElementRef tbody(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Tbody, inner, id);
    public static ElementRef td(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Td, inner, id);
    public static ElementRef template(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Template, inner, id);
    public static ElementRef textarea(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Textarea, inner, id);
    public static ElementRef tfoot(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Tfoot, inner, id);
    public static ElementRef th(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Th, inner, id);
    public static ElementRef thead(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Thead, inner, id);
    public static ElementRef time(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Time, inner, id);
    public static ElementRef title(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Title, inner, id);
    public static ElementRef tr(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Tr, inner, id);
    public static ElementRef track(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Track, inner, id);
    public static ElementRef u(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.U, inner, id);
    public static ElementRef ul(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Ul, inner, id);
    public static ElementRef var(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Var, inner, id);
    public static ElementRef video(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Video, inner, id);
    public static ElementRef wbr(this Ui ui, object inner, Value128? id = default) => InlineDirective(ui, HtmlTags.Wbr, inner, id);

    #endregion

    #region Inline Directives w/ Attributes

    public static ElementRef area(this Ui ui, object inner, string alt = default, string accesskey = default, string @class = default, string contenteditable = default, Value128? id = default)
    {
        #region Attributes

        if(alt != default) ui.PushAttribute(nameof(alt), alt);
        if(accesskey != default) ui.PushAttribute(nameof(accesskey), accesskey);
        if(@class != default) ui.PushAttribute(nameof(@class), @class);
        if(contenteditable != default) ui.PushAttribute(nameof(contenteditable), contenteditable);

        #endregion

        return InlineDirective(ui, HtmlTags.Area, inner, id);
    }

    public static ElementRef form(this Ui ui, object inner, string action = default, string autocomplete = default, string accesskey = default, string @class = default, string contenteditable = default, Value128? id = default)
    {
        #region Attributes

        if(action != default) ui.PushAttribute(nameof(action), action);
        if(autocomplete != default) ui.PushAttribute(nameof(autocomplete), autocomplete);
        if(accesskey != default) ui.PushAttribute(nameof(accesskey), accesskey);
        if(@class != default) ui.PushAttribute(nameof(@class), @class);
        if(contenteditable != default) ui.PushAttribute(nameof(contenteditable), contenteditable);

        #endregion

        return InlineDirective(ui, HtmlTags.Form, inner, id);
    }

    public static ElementRef img(this Ui ui, object inner, string alt = default, string accesskey = default, string @class = default, string contenteditable = default, Value128? id = default)
    {
        #region Attributes

        if(alt != default) ui.PushAttribute(nameof(alt), alt);
        if(accesskey != default) ui.PushAttribute(nameof(accesskey), accesskey);
        if(@class != default) ui.PushAttribute(nameof(@class), @class);
        if(contenteditable != default) ui.PushAttribute(nameof(contenteditable), contenteditable);

        #endregion

        return InlineDirective(ui, HtmlTags.Img, inner, id);
    }

    public static ElementRef input(this Ui ui, object inner, string accept = default, string alt = default, string autocomplete = default, string accesskey = default, string @class = default, string contenteditable = default, Value128? id = default)
    {
        #region Attributes

        if(accept != default) ui.PushAttribute(nameof(accept), accept);
        if(alt != default) ui.PushAttribute(nameof(alt), alt);
        if(autocomplete != default) ui.PushAttribute(nameof(autocomplete), autocomplete);
        if(accesskey != default) ui.PushAttribute(nameof(accesskey), accesskey);
        if(@class != default) ui.PushAttribute(nameof(@class), @class);
        if(contenteditable != default) ui.PushAttribute(nameof(contenteditable), contenteditable);

        #endregion

        return InlineDirective(ui, HtmlTags.Input, inner, id);
    }

    public static ElementRef script(this Ui ui, object inner, string async = default, string accesskey = default, string @class = default, string contenteditable = default, Value128? id = default)
    {
        #region Attributes

        if(async != default) ui.PushAttribute(nameof(async), async);
        if(accesskey != default) ui.PushAttribute(nameof(accesskey), accesskey);
        if(@class != default) ui.PushAttribute(nameof(@class), @class);
        if(contenteditable != default) ui.PushAttribute(nameof(contenteditable), contenteditable);

        #endregion

        return InlineDirective(ui, HtmlTags.Script, inner, id);
    }


    #endregion

}

